name: Daily Website Crawl Main

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    # 调整为 UTC 时间每天 00:05 运行（对应北京时间 08:05）
    - cron: '5 0 * * *'

jobs:
  crawl-and-notify:
    runs-on: ubuntu-latest

    # 添加权限声明
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # 显式配置令牌权限
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true

    - name: Setup timezone
      run: |
        # 设置时区为上海（确保日期计算准确）
        sudo timedatectl set-timezone Asia/Shanghai
        
    - name: Create daily directory
      run: |
        # 生成带时区的日期（格式：webpages-YYYYMMDD）
        DIR_NAME="webpages-$(TZ='Asia/Shanghai' date +'%Y%m%d')"
        echo "DIR_NAME=$DIR_NAME" >> $GITHUB_ENV
        echo "当前日期：$(TZ='Asia/Shanghai' date)"
        echo "生成目录：$DIR_NAME"
        mkdir -p $DIR_NAME

    - name: Clean wget cache
      run: |
        # 清除历史缓存文件
        rm -f ~/.wget-hsts
        
    - name: Crawl website (with debug)
      run: |
        # 添加调试参数和错误处理 # 强制重新下载所有内容
        wget --debug \
             --mirror \
             --convert-links \
             --adjust-extension \
             --page-requisites \
             --no-parent \
             --timestamping \  # 保留时间戳比较功能
             --no-use-server-timestamps \  # 不使用服务器时间戳
             --no-cache \  # 禁用缓存
             --no-hsts \  # 禁用HSTS缓存
             --no-verbose \
             --tries=3 \
             --wait=2 \
             --random-wait \
             --execute robots=off \
             --timeout=30 \
             --waitretry=5 \
             --retry-connrefused \
             --user-agent="Mozilla/5.0 (compatible; GitHub-Actions-Crawler)" \
             --no-check-certificate \
             -P $DIR_NAME \
             http://www.saoing.com/ 2>&1 | tee wget.log || echo "Wget exited with code $? (non-fatal)"
        # 强制创建空目录（即使下载失败）
        touch $DIR_NAME/.gitkeep
        
    - name: Check directory content
      run: |
        # 检查目录是否生成内容
        echo "Directory contents:"
        ls -lR $DIR_NAME || true
        
    - name: Commit changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        # 强制设置远程仓库地址（关键修复）
        git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        
        # 强制提交（允许空提交）
        git add $DIR_NAME
        git commit --allow-empty -m "Add crawl attempt: $DIR_NAME"
        git push

    - name: Verification
      run: |
        echo "验证目录结构："
        ls -lhd webpages-*
        echo "当天目录内容："
        ls -l $DIR_NAME
        
    - name: Send Telegram notification
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        #TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
        #TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}    
      run: |
        # 添加执行状态判断
        if [ -s "$DIR_NAME/index.htm" ]; then
          STATUS="✅ 成功"
          FILE_INFO=$(du -sh $DIR_NAME)
        else
          STATUS="⚠️ 部分失败"
          FILE_INFO="无有效内容"
        fi
        MESSAGE="网站抓取状态：$STATUS%0A- 日期: $(date +'%Y-%m-%d')%0A- 目录: $DIR_NAME%0A- 文件情况: $FILE_INFO%0A- 日志: https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
        
        curl -s -X POST \
          "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="$MESSAGE"
